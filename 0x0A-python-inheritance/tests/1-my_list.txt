The ``1-my_list`` module
============================

Using ``MyList``
---------------------

Importing function from the module:
    >>> MyList = __import__('1-my_list').MyList


checking Printing a sorted list 1 (positive numbers):
    >>> my_list = MyList()
    >>> my_list += [0]
    >>> my_list.append(9)
    >>> my_list.append(21)
    >>> my_list.append(3)
    >>> my_list.append(33)
    >>> my_list.append(10)
    >>> my_list.print_sorted()
    [0, 3, 9, 10, 21, 33]


checking Printing a sorted list 2 (repeated numbers):
    >>> my_list = MyList()
    >>> my_list.append(3)
    >>> my_list += [3]
    >>> my_list.append(0)
    >>> my_list.append(0)
    >>> my_list += [0]
    >>> my_list.print_sorted()
    [0, 0, 0, 3, 3]


checking Printing an sorted list 3 (one number):
    >>> my_list = MyList()
    >>> my_list += [100]
    >>> my_list.print_sorted()
    [100]


Checking printable string:
    >>> my_list = MyList()
    >>> my_list.append(3)
    >>> print(my_list)
    [3]


checking Printing an sorted list 4 (positive and negative numbers):
    >>> my_list = MyList()
    >>> my_list.append(-5)
    >>> my_list += [5]
    >>> my_list += [4]
    >>> my_list.append(0)
    >>> my_list.append(-4)
    >>> my_list.append(1)
    >>> my_list += [-1]
    >>> my_list.print_sorted()
    [-5, -4, -1, 0, 1, 4, 5]


checking Printing an empty list:
    >>> my_list = MyList()
    >>> my_list.print_sorted()
    []


checking MyList is an instance of the class list:
    >>> my_list = MyList()
    >>> isinstance(my_list, list)
    True


checking Instance has the correct type:
    >>> my_list = MyList()
    >>> type(my_list) == MyList
    True


checking MyList is a subclass of list:
    >>> issubclass(MyList, list)
    True


checking Print_sorted method with 1 passed argument:
    >>> my_list = MyList()
    >>> my_list.print_sorted([11, 12, 13])
    Traceback (most recent call last):
    	      ...
    TypeError: print_sorted() takes 1 positional argument but 2 were given


checking Print_sorted method with 2 passed arguments:
    >>> my_list = MyList()
    >>> my_list.print_sorted([1, 6], [3, 2])
    Traceback (most recent call last):
    	      ...
    TypeError: print_sorted() takes 1 positional argument but 3 were given


checking Type of the print_sorted method:
    >>> my_list = MyList()
    >>> type(my_list.print_sorted)
    <class 'method'>


Checking if print_sorted() returns a new list:
    >>> my_list = MyList()
    >>> my_list.append(7)
    >>> my_list.append(1)
    >>> my_list.append(2)
    >>> my_list.print_sorted()
    [1, 2, 7]
    >>> my_list
    [7, 1, 2]
